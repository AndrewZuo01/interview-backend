{"version":3,"sources":["../src/useChatData.ts","../src/state.ts","../src/utils/group.ts","../src/useChatInteract.ts","../src/utils/message.ts","../src/useChatMessages.ts","../src/useChatSession.ts","../src/utils/token.ts","../src/api/hooks/auth.ts","../src/api/hooks/api.ts","../src/api/index.tsx","../src/index.ts"],"names":["useRecoilValue","isEqual","DefaultValue","atom","selector","uuidv4","groupByDate","data","groupedData","today","yesterday","sevenDaysAgo","thirtyDaysAgo","item","createdAt","isToday","isYesterday","isLast7Days","isLast30Days","category","threadIdToResumeState","chatProfileState","sessionIdAtom","sessionIdState","get","set","newValue","sessionState","actionState","messagesState","tokenCountState","loadingState","askUserState","callFnState","chatSettingsInputsState","chatSettingsDefaultValueSelector","form","input","chatSettingsValueState","elementState","avatarState","tasklistState","firstUserInteraction","accessTokenState","userState","threadHistoryState","setSelf","onSet","oldValue","timeGroupedThreads","useChatData","loading","elements","avatars","tasklists","actions","session","askUser","chatSettingsInputs","chatSettingsValue","chatSettingsDefaultValue","connected","disabled","useCallback","useResetRecoilState","useSetRecoilState","nestMessages","messages","nestedMessages","message","addMessage","isLastMessage","index","i","hasMessageById","updateMessageById","addMessageToParent","addIndentMessage","indent","newMessage","currentIndentation","nextMessages","msg","parentId","messageId","updatedMessage","deleteMessageById","updateMessageContentById","updatedContent","isSequence","useChatInteract","accessToken","sessionId","resetChatSettings","resetSessionId","resetChatSettingsValue","setFirstUserInteraction","setLoading","setMessages","setElements","setAvatars","setTasklists","setActions","setTokenCount","setIdToResume","clear","sendMessage","fileReferences","oldMessages","replyMessage","updateChatSettings","values","stopTask","callAction","action","socket","promise","resolve","reject","response","client","file","onProgress","useChatMessages","firstInteraction","debounce","useRecoilState","io","useChatSession","setSession","setAskUser","setCallFn","setChatSettingsInputs","chatProfile","setChatProfile","idToResume","_connect","userEnv","old","s","_","thread","step","e","interaction","id","token","spec","callback","name","args","event","inputs","element","remove","a","count","connect","disconnect","tokenKey","getToken","setToken","removeToken","jwt_decode","useEffect","useSWR","fetcher","endpoint","useApi","path","options","url","useAuth","apiClient","isLoading","setAccessToken","setThreadHistory","user","setUser","isReady","logout","saveAndSetToken","exp","User","isAuthenticated","ClientError","detail","APIBase","httpEndpoint","type","on401","onError","prefix","method","signal","headers","body","res","error","ChainlitAPI","generation","controller","tokenCb","payload","reader","push","done","value","string","err","feedback","pagination","filter","threadId","xhr","formData","percentage","queryParams","theme","provider","Socket"],"mappings":"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","sourcesContent":["import { useRecoilValue } from 'recoil';\r\n\r\nimport {\r\n  actionState,\r\n  askUserState,\r\n  avatarState,\r\n  chatSettingsDefaultValueSelector,\r\n  chatSettingsInputsState,\r\n  chatSettingsValueState,\r\n  elementState,\r\n  loadingState,\r\n  sessionState,\r\n  tasklistState\r\n} from './state';\r\n\r\nexport interface IToken {\r\n  id: number | string;\r\n  token: string;\r\n  isSequence: boolean;\r\n}\r\n\r\nconst useChatData = () => {\r\n  const loading = useRecoilValue(loadingState);\r\n  const elements = useRecoilValue(elementState);\r\n  const avatars = useRecoilValue(avatarState);\r\n  const tasklists = useRecoilValue(tasklistState);\r\n  const actions = useRecoilValue(actionState);\r\n  const session = useRecoilValue(sessionState);\r\n  const askUser = useRecoilValue(askUserState);\r\n  const chatSettingsInputs = useRecoilValue(chatSettingsInputsState);\r\n  const chatSettingsValue = useRecoilValue(chatSettingsValueState);\r\n  const chatSettingsDefaultValue = useRecoilValue(\r\n    chatSettingsDefaultValueSelector\r\n  );\r\n\r\n  const connected = session?.socket.connected && !session?.error;\r\n  const disabled =\r\n    !connected ||\r\n    loading ||\r\n    askUser?.spec.type === 'file' ||\r\n    askUser?.spec.type === 'action';\r\n\r\n  return {\r\n    actions,\r\n    askUser,\r\n    avatars,\r\n    chatSettingsDefaultValue,\r\n    chatSettingsInputs,\r\n    chatSettingsValue,\r\n    connected,\r\n    disabled,\r\n    elements,\r\n    error: session?.error,\r\n    loading,\r\n    tasklists\r\n  };\r\n};\r\n\r\nexport { useChatData };\r\n","import { isEqual } from 'lodash';\r\nimport { DefaultValue, atom, selector } from 'recoil';\r\nimport { Socket } from 'socket.io-client';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {\r\n  IAction,\r\n  IAsk,\r\n  IAvatarElement,\r\n  ICallFn,\r\n  IMessageElement,\r\n  IStep,\r\n  ITasklistElement,\r\n  IUser,\r\n  ThreadHistory\r\n} from './types';\r\nimport { groupByDate } from './utils/group';\r\n\r\nexport interface ISession {\r\n  socket: Socket;\r\n  error?: boolean;\r\n}\r\n\r\nexport const threadIdToResumeState = atom<string | undefined>({\r\n  key: 'ThreadIdToResume',\r\n  default: undefined\r\n});\r\n\r\nexport const chatProfileState = atom<string | undefined>({\r\n  key: 'ChatProfile',\r\n  default: undefined\r\n});\r\n\r\nconst sessionIdAtom = atom<string>({\r\n  key: 'SessionId',\r\n  default: uuidv4()\r\n});\r\n\r\nexport const sessionIdState = selector({\r\n  key: 'SessionIdSelector',\r\n  get: ({ get }) => get(sessionIdAtom),\r\n  set: ({ set }, newValue) =>\r\n    set(sessionIdAtom, newValue instanceof DefaultValue ? uuidv4() : newValue)\r\n});\r\n\r\nexport const sessionState = atom<ISession | undefined>({\r\n  key: 'Session',\r\n  dangerouslyAllowMutability: true,\r\n  default: undefined\r\n});\r\n\r\nexport const actionState = atom<IAction[]>({\r\n  key: 'Actions',\r\n  default: []\r\n});\r\n\r\nexport const messagesState = atom<IStep[]>({\r\n  key: 'Messages',\r\n  dangerouslyAllowMutability: true,\r\n  default: []\r\n});\r\n\r\nexport const tokenCountState = atom<number>({\r\n  key: 'TokenCount',\r\n  default: 0\r\n});\r\n\r\nexport const loadingState = atom<boolean>({\r\n  key: 'Loading',\r\n  default: false\r\n});\r\n\r\nexport const askUserState = atom<IAsk | undefined>({\r\n  key: 'AskUser',\r\n  default: undefined\r\n});\r\n\r\nexport const callFnState = atom<ICallFn | undefined>({\r\n  key: 'CallFn',\r\n  default: undefined\r\n});\r\n\r\nexport const chatSettingsInputsState = atom<any>({\r\n  key: 'ChatSettings',\r\n  default: []\r\n});\r\n\r\nexport const chatSettingsDefaultValueSelector = selector({\r\n  key: 'ChatSettingsValue/Default',\r\n  get: ({ get }) => {\r\n    const chatSettings = get(chatSettingsInputsState);\r\n    return chatSettings.reduce(\r\n      (form: { [key: string]: any }, input: any) => (\r\n        (form[input.id] = input.initial), form\r\n      ),\r\n      {}\r\n    );\r\n  }\r\n});\r\n\r\nexport const chatSettingsValueState = atom({\r\n  key: 'ChatSettingsValue',\r\n  default: chatSettingsDefaultValueSelector\r\n});\r\n\r\nexport const elementState = atom<IMessageElement[]>({\r\n  key: 'DisplayElements',\r\n  default: []\r\n});\r\n\r\nexport const avatarState = atom<IAvatarElement[]>({\r\n  key: 'AvatarElements',\r\n  default: []\r\n});\r\n\r\nexport const tasklistState = atom<ITasklistElement[]>({\r\n  key: 'TasklistElements',\r\n  default: []\r\n});\r\n\r\nexport const firstUserInteraction = atom<string | undefined>({\r\n  key: 'FirstUserInteraction',\r\n  default: undefined\r\n});\r\n\r\nexport const accessTokenState = atom<string | undefined>({\r\n  key: 'AccessToken',\r\n  default: undefined\r\n});\r\n\r\nexport const userState = atom<IUser | null>({\r\n  key: 'User',\r\n  default: null\r\n});\r\n\r\nexport const threadHistoryState = atom<ThreadHistory | undefined>({\r\n  key: 'ThreadHistory',\r\n  default: {\r\n    threads: undefined,\r\n    currentThreadId: undefined,\r\n    timeGroupedThreads: undefined,\r\n    pageInfo: undefined\r\n  },\r\n  effects: [\r\n    ({ setSelf, onSet }: { setSelf: any; onSet: any }) => {\r\n      onSet(\r\n        (\r\n          newValue: ThreadHistory | undefined,\r\n          oldValue: ThreadHistory | undefined\r\n        ) => {\r\n          let timeGroupedThreads = newValue?.timeGroupedThreads;\r\n          if (\r\n            newValue?.threads &&\r\n            !isEqual(newValue.threads, oldValue?.timeGroupedThreads)\r\n          ) {\r\n            timeGroupedThreads = groupByDate(newValue.threads);\r\n          }\r\n\r\n          setSelf({\r\n            ...newValue,\r\n            timeGroupedThreads\r\n          });\r\n        }\r\n      );\r\n    }\r\n  ]\r\n});\r\n","import { IThread } from 'src/types';\r\n\r\nexport const groupByDate = (data: IThread[]) => {\r\n  const groupedData: { [key: string]: IThread[] } = {};\r\n\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const sevenDaysAgo = new Date();\r\n  sevenDaysAgo.setDate(today.getDate() - 7);\r\n  const thirtyDaysAgo = new Date();\r\n  thirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\n  data.forEach((item) => {\r\n    const createdAt = new Date(item.createdAt);\r\n    const isToday = createdAt.toDateString() === today.toDateString();\r\n    const isYesterday = createdAt.toDateString() === yesterday.toDateString();\r\n    const isLast7Days = createdAt >= sevenDaysAgo;\r\n    const isLast30Days = createdAt >= thirtyDaysAgo;\r\n\r\n    let category: string;\r\n\r\n    if (isToday) {\r\n      category = 'Today';\r\n    } else if (isYesterday) {\r\n      category = 'Yesterday';\r\n    } else if (isLast7Days) {\r\n      category = 'Previous 7 days';\r\n    } else if (isLast30Days) {\r\n      category = 'Previous 30 days';\r\n    } else {\r\n      const monthYear = createdAt.toLocaleString('default', {\r\n        month: 'long',\r\n        year: 'numeric'\r\n      });\r\n\r\n      category = monthYear.split(' ').slice(0, 1).join(' ');\r\n    }\r\n\r\n    if (!groupedData[category]) {\r\n      groupedData[category] = [];\r\n    }\r\n\r\n    groupedData[category].push(item);\r\n  });\r\n\r\n  return groupedData;\r\n};\r\n","import { useCallback } from 'react';\r\nimport { useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\r\nimport {\r\n  accessTokenState,\r\n  actionState,\r\n  askUserState,\r\n  avatarState,\r\n  chatSettingsInputsState,\r\n  chatSettingsValueState,\r\n  elementState,\r\n  firstUserInteraction,\r\n  loadingState,\r\n  messagesState,\r\n  sessionIdState,\r\n  sessionState,\r\n  tasklistState,\r\n  threadIdToResumeState,\r\n  tokenCountState\r\n} from 'src/state';\r\nimport { IAction, IFileRef, IStep } from 'src/types';\r\nimport { addMessage } from 'src/utils/message';\r\n\r\nimport { ChainlitAPI } from './api';\r\n\r\nconst useChatInteract = () => {\r\n  const accessToken = useRecoilValue(accessTokenState);\r\n  const session = useRecoilValue(sessionState);\r\n  const askUser = useRecoilValue(askUserState);\r\n  const sessionId = useRecoilValue(sessionIdState);\r\n\r\n  const resetChatSettings = useResetRecoilState(chatSettingsInputsState);\r\n  const resetSessionId = useResetRecoilState(sessionIdState);\r\n  const resetChatSettingsValue = useResetRecoilState(chatSettingsValueState);\r\n\r\n  const setFirstUserInteraction = useSetRecoilState(firstUserInteraction);\r\n  const setLoading = useSetRecoilState(loadingState);\r\n  const setMessages = useSetRecoilState(messagesState);\r\n  const setElements = useSetRecoilState(elementState);\r\n  const setAvatars = useSetRecoilState(avatarState);\r\n  const setTasklists = useSetRecoilState(tasklistState);\r\n  const setActions = useSetRecoilState(actionState);\r\n  const setTokenCount = useSetRecoilState(tokenCountState);\r\n  const setIdToResume = useSetRecoilState(threadIdToResumeState);\r\n\r\n  const clear = useCallback(() => {\r\n    session?.socket.emit('clear_session');\r\n    session?.socket.disconnect();\r\n    setIdToResume(undefined);\r\n    resetSessionId();\r\n    setFirstUserInteraction(undefined);\r\n    setMessages([]);\r\n    setElements([]);\r\n    setAvatars([]);\r\n    setTasklists([]);\r\n    setActions([]);\r\n    setTokenCount(0);\r\n    resetChatSettings();\r\n    resetChatSettingsValue();\r\n    console.log(\"clear\")\r\n  }, [session]);\r\n\r\n  const sendMessage = useCallback(\r\n    (message: IStep, fileReferences?: IFileRef[]) => {\r\n      setMessages((oldMessages) => addMessage(oldMessages, message));\r\n\r\n      session?.socket.emit('ui_message', { message, fileReferences });\r\n    },\r\n    [session?.socket]\r\n  );\r\n\r\n  const replyMessage = useCallback(\r\n    (message: IStep) => {\r\n      if (askUser) {\r\n        setMessages((oldMessages) => addMessage(oldMessages, message));\r\n        askUser.callback(message);\r\n      }\r\n    },\r\n    [askUser]\r\n  );\r\n\r\n  const updateChatSettings = useCallback(\r\n    (values: object) => {\r\n      session?.socket.emit('chat_settings_change', values);\r\n    },\r\n    [session?.socket]\r\n  );\r\n\r\n  const stopTask = useCallback(() => {\r\n    setLoading(false);\r\n    session?.socket.emit('stop');\r\n  }, [session?.socket]);\r\n\r\n  const callAction = useCallback(\r\n    (action: IAction) => {\r\n      const socket = session?.socket;\r\n      if (!socket) return;\r\n\r\n      const promise = new Promise<{\r\n        id: string;\r\n        status: boolean;\r\n        response?: string;\r\n      }>((resolve, reject) => {\r\n        socket.once('action_response', (response) => {\r\n          if (response.status) {\r\n            resolve(response);\r\n          } else {\r\n            reject(response);\r\n          }\r\n        });\r\n      });\r\n\r\n      socket.emit('action_call', action);\r\n\r\n      return promise;\r\n    },\r\n    [session?.socket]\r\n  );\r\n\r\n  const uploadFile = useCallback(\r\n    (\r\n      client: ChainlitAPI,\r\n      file: File,\r\n      onProgress: (progress: number) => void\r\n    ) => {\r\n      return client.uploadFile(file, onProgress, sessionId, accessToken);\r\n    },\r\n    [sessionId, accessToken]\r\n  );\r\n\r\n  return {\r\n    uploadFile,\r\n    callAction,\r\n    clear,\r\n    replyMessage,\r\n    sendMessage,\r\n    stopTask,\r\n    setIdToResume,\r\n    updateChatSettings\r\n  };\r\n};\r\n\r\nexport { useChatInteract };\r\n","import { isEqual } from 'lodash';\r\n\r\nimport { IStep } from '..';\r\n\r\nconst nestMessages = (messages: IStep[]): IStep[] => {\r\n  let nestedMessages: IStep[] = [];\r\n\r\n  for (const message of messages) {\r\n    nestedMessages = addMessage(nestedMessages, message);\r\n  }\r\n\r\n  return nestedMessages;\r\n};\r\n\r\nconst isLastMessage = (messages: IStep[], index: number) => {\r\n  if (messages.length - 1 === index) {\r\n    return true;\r\n  }\r\n\r\n  for (let i = index + 1; i < messages.length; i++) {\r\n    if (messages[i].streaming) {\r\n      continue;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n// Nested messages utils\r\n\r\nconst addMessage = (messages: IStep[], message: IStep): IStep[] => {\r\n  if (hasMessageById(messages, message.id)) {\r\n    return updateMessageById(messages, message.id, message);\r\n  } else if ('parentId' in message && message.parentId) {\r\n    return addMessageToParent(messages, message.parentId, message);\r\n  } else if ('indent' in message && message.indent && message.indent > 0) {\r\n    return addIndentMessage(messages, message.indent, message);\r\n  } else {\r\n    return [...messages, message];\r\n  }\r\n};\r\n\r\nconst addIndentMessage = (\r\n  messages: IStep[],\r\n  indent: number,\r\n  newMessage: IStep,\r\n  currentIndentation: number = 0\r\n): IStep[] => {\r\n  const nextMessages = [...messages];\r\n\r\n  if (nextMessages.length === 0) {\r\n    return [...nextMessages, newMessage];\r\n  } else {\r\n    const index = nextMessages.length - 1;\r\n    const msg = nextMessages[index];\r\n    msg.steps = msg.steps || [];\r\n\r\n    if (currentIndentation + 1 === indent) {\r\n      msg.steps = [...msg.steps, newMessage];\r\n      nextMessages[index] = { ...msg };\r\n\r\n      return nextMessages;\r\n    } else {\r\n      msg.steps = addIndentMessage(\r\n        msg.steps,\r\n        indent,\r\n        newMessage,\r\n        currentIndentation + 1\r\n      );\r\n\r\n      nextMessages[index] = { ...msg };\r\n      return nextMessages;\r\n    }\r\n  }\r\n};\r\n\r\nconst addMessageToParent = (\r\n  messages: IStep[],\r\n  parentId: string,\r\n  newMessage: IStep\r\n): IStep[] => {\r\n  const nextMessages = [...messages];\r\n\r\n  for (let index = 0; index < nextMessages.length; index++) {\r\n    const msg = nextMessages[index];\r\n\r\n    if (isEqual(msg.id, parentId)) {\r\n      msg.steps = msg.steps ? [...msg.steps, newMessage] : [newMessage];\r\n      nextMessages[index] = { ...msg };\r\n    } else if (hasMessageById(nextMessages, parentId) && msg.steps) {\r\n      msg.steps = addMessageToParent(msg.steps, parentId, newMessage);\r\n      nextMessages[index] = { ...msg };\r\n    }\r\n  }\r\n\r\n  return nextMessages;\r\n};\r\n\r\nconst hasMessageById = (messages: IStep[], messageId: string) => {\r\n  for (const message of messages) {\r\n    if (isEqual(message.id, messageId)) {\r\n      return true;\r\n    } else if (message.steps && message.steps.length > 0) {\r\n      if (hasMessageById(message.steps, messageId)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst updateMessageById = (\r\n  messages: IStep[],\r\n  messageId: string,\r\n  updatedMessage: IStep\r\n): IStep[] => {\r\n  const nextMessages = [...messages];\r\n\r\n  for (let index = 0; index < nextMessages.length; index++) {\r\n    const msg = nextMessages[index];\r\n\r\n    if (isEqual(msg.id, messageId)) {\r\n      nextMessages[index] = { steps: msg.steps, ...updatedMessage };\r\n    } else if (hasMessageById(nextMessages, messageId) && msg.steps) {\r\n      msg.steps = updateMessageById(msg.steps, messageId, updatedMessage);\r\n      nextMessages[index] = { ...msg };\r\n    }\r\n  }\r\n\r\n  return nextMessages;\r\n};\r\n\r\nconst deleteMessageById = (messages: IStep[], messageId: string) => {\r\n  let nextMessages = [...messages];\r\n\r\n  for (let index = 0; index < nextMessages.length; index++) {\r\n    const msg = nextMessages[index];\r\n\r\n    if (msg.id === messageId) {\r\n      nextMessages = [\r\n        ...nextMessages.slice(0, index),\r\n        ...nextMessages.slice(index + 1)\r\n      ];\r\n    } else if (hasMessageById(nextMessages, messageId) && msg.steps) {\r\n      msg.steps = deleteMessageById(msg.steps, messageId);\r\n      nextMessages[index] = { ...msg };\r\n    }\r\n  }\r\n\r\n  return nextMessages;\r\n};\r\n\r\nconst updateMessageContentById = (\r\n  messages: IStep[],\r\n  messageId: number | string,\r\n  updatedContent: string,\r\n  isSequence: boolean\r\n): IStep[] => {\r\n  const nextMessages = [...messages];\r\n\r\n  for (let index = 0; index < nextMessages.length; index++) {\r\n    const msg = nextMessages[index];\r\n\r\n    if (isEqual(msg.id, messageId)) {\r\n      if ('content' in msg && msg.content !== undefined) {\r\n        if (isSequence) {\r\n          msg.content = updatedContent;\r\n        } else {\r\n          msg.content += updatedContent;\r\n        }\r\n      } else {\r\n        if ('output' in msg && msg.output !== undefined) {\r\n          if (isSequence) {\r\n            msg.output = updatedContent;\r\n          } else {\r\n            msg.output += updatedContent;\r\n          }\r\n        }\r\n      }\r\n\r\n      nextMessages[index] = { ...msg };\r\n    } else if (msg.steps) {\r\n      msg.steps = updateMessageContentById(\r\n        msg.steps,\r\n        messageId,\r\n        updatedContent,\r\n        isSequence\r\n      );\r\n      nextMessages[index] = { ...msg };\r\n    }\r\n  }\r\n\r\n  return nextMessages;\r\n};\r\n\r\nexport {\r\n  addMessageToParent,\r\n  addMessage,\r\n  deleteMessageById,\r\n  hasMessageById,\r\n  isLastMessage,\r\n  nestMessages,\r\n  updateMessageById,\r\n  updateMessageContentById\r\n};\r\n","import { useRecoilValue } from 'recoil';\r\n\r\nimport { firstUserInteraction, messagesState } from './state';\r\n\r\nconst useChatMessages = () => {\r\n  const messages = useRecoilValue(messagesState);\r\n  const firstInteraction = useRecoilValue(firstUserInteraction);\r\n\r\n  return {\r\n    messages,\r\n    firstInteraction\r\n  };\r\n};\r\n\r\nexport { useChatMessages };\r\n","import { debounce } from 'lodash';\r\nimport { useCallback } from 'react';\r\nimport {\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useResetRecoilState,\r\n  useSetRecoilState\r\n} from 'recoil';\r\nimport io from 'socket.io-client';\r\nimport {\r\n  actionState,\r\n  askUserState,\r\n  avatarState,\r\n  callFnState,\r\n  chatProfileState,\r\n  chatSettingsInputsState,\r\n  chatSettingsValueState,\r\n  elementState,\r\n  firstUserInteraction,\r\n  loadingState,\r\n  messagesState,\r\n  sessionIdState,\r\n  sessionState,\r\n  tasklistState,\r\n  threadIdToResumeState,\r\n  tokenCountState\r\n} from 'src/state';\r\nimport {\r\n  IAction,\r\n  IAvatarElement,\r\n  IElement,\r\n  IMessageElement,\r\n  IStep,\r\n  ITasklistElement,\r\n  IThread\r\n} from 'src/types';\r\nimport {\r\n  addMessage,\r\n  deleteMessageById,\r\n  updateMessageById,\r\n  updateMessageContentById\r\n} from 'src/utils/message';\r\n\r\nimport { ChainlitAPI } from './api';\r\nimport type { IToken } from './useChatData';\r\n\r\nconst useChatSession = () => {\r\n  const sessionId = useRecoilValue(sessionIdState);\r\n\r\n  const [session, setSession] = useRecoilState(sessionState);\r\n\r\n  const resetChatSettingsValue = useResetRecoilState(chatSettingsValueState);\r\n  const setFirstUserInteraction = useSetRecoilState(firstUserInteraction);\r\n  const setLoading = useSetRecoilState(loadingState);\r\n  const setMessages = useSetRecoilState(messagesState);\r\n  const setAskUser = useSetRecoilState(askUserState);\r\n  const setCallFn = useSetRecoilState(callFnState);\r\n\r\n  const setElements = useSetRecoilState(elementState);\r\n  const setAvatars = useSetRecoilState(avatarState);\r\n  const setTasklists = useSetRecoilState(tasklistState);\r\n  const setActions = useSetRecoilState(actionState);\r\n  const setChatSettingsInputs = useSetRecoilState(chatSettingsInputsState);\r\n  const setTokenCount = useSetRecoilState(tokenCountState);\r\n  const [chatProfile, setChatProfile] = useRecoilState(chatProfileState);\r\n  const idToResume = useRecoilValue(threadIdToResumeState);\r\n\r\n  const _connect = useCallback(\r\n    ({\r\n      client,\r\n      userEnv,\r\n      accessToken\r\n    }: {\r\n      client: ChainlitAPI;\r\n      userEnv: Record<string, string>;\r\n      accessToken?: string;\r\n    }) => {\r\n      const socket = io(client.httpEndpoint, {\r\n        path: '/ws/socket.io',\r\n        extraHeaders: {\r\n          Authorization: accessToken || '',\r\n          'X-Chainlit-Client-Type': client.type,\r\n          'X-Chainlit-Session-Id': sessionId,\r\n          'X-Chainlit-Thread-Id': idToResume || '',\r\n          'user-env': JSON.stringify(userEnv),\r\n          'X-Chainlit-Chat-Profile': chatProfile || ''\r\n        }\r\n      });\r\n      setSession((old) => {\r\n        old?.socket?.removeAllListeners();\r\n        old?.socket?.close();\r\n        return {\r\n          socket\r\n        };\r\n      });\r\n\r\n      socket.on('connect', () => {\r\n        socket.emit('connection_successful');\r\n        setSession((s) => ({ ...s!, error: false }));\r\n      });\r\n\r\n      socket.on('connect_error', (_) => {\r\n        setSession((s) => ({ ...s!, error: true }));\r\n      });\r\n\r\n      socket.on('task_start', () => {\r\n        setLoading(true);\r\n      });\r\n\r\n      socket.on('task_end', () => {\r\n        setLoading(false);\r\n      });\r\n\r\n      socket.on('reload', () => {\r\n        console.log(\"reload\")\r\n        // socket.emit('clear_session');\r\n        window.location.reload();\r\n      });\r\n\r\n      socket.on('resume_thread', (thread: IThread) => {\r\n        let messages: IStep[] = [];\r\n        for (const step of thread.steps) {\r\n          messages = addMessage(messages, step);\r\n        }\r\n        if (thread.metadata?.chat_profile) {\r\n          setChatProfile(thread.metadata?.chat_profile);\r\n        }\r\n        setMessages(messages);\r\n        const elements = thread.elements || [];\r\n        setAvatars(\r\n          (elements as IAvatarElement[]).filter((e) => e.type === 'avatar')\r\n        );\r\n        setTasklists(\r\n          (elements as ITasklistElement[]).filter((e) => e.type === 'tasklist')\r\n        );\r\n        setElements(\r\n          (elements as IMessageElement[]).filter(\r\n            (e) => ['avatar', 'tasklist'].indexOf(e.type) === -1\r\n          )\r\n        );\r\n      });\r\n\r\n      socket.on('new_message', (message: IStep) => {\r\n        setMessages((oldMessages) => addMessage(oldMessages, message));\r\n      });\r\n\r\n      socket.on('first_interaction', (interaction: string) => {\r\n        setFirstUserInteraction(interaction);\r\n      });\r\n\r\n      socket.on('update_message', (message: IStep) => {\r\n        setMessages((oldMessages) =>\r\n          updateMessageById(oldMessages, message.id, message)\r\n        );\r\n      });\r\n\r\n      socket.on('delete_message', (message: IStep) => {\r\n        setMessages((oldMessages) =>\r\n          deleteMessageById(oldMessages, message.id)\r\n        );\r\n      });\r\n\r\n      socket.on('stream_start', (message: IStep) => {\r\n        setMessages((oldMessages) => addMessage(oldMessages, message));\r\n      });\r\n\r\n      socket.on('stream_token', ({ id, token, isSequence }: IToken) => {\r\n        setMessages((oldMessages) =>\r\n          updateMessageContentById(oldMessages, id, token, isSequence)\r\n        );\r\n      });\r\n\r\n      socket.on('ask', ({ msg, spec }, callback) => {\r\n        setAskUser({ spec, callback });\r\n        setMessages((oldMessages) => addMessage(oldMessages, msg));\r\n\r\n        setLoading(false);\r\n      });\r\n\r\n      socket.on('ask_timeout', () => {\r\n        setAskUser(undefined);\r\n        setLoading(false);\r\n      });\r\n\r\n      socket.on('clear_ask', () => {\r\n        setAskUser(undefined);\r\n      });\r\n\r\n      socket.on('call_fn', ({ name, args }, callback) => {\r\n        const event = new CustomEvent('chainlit-call-fn', {\r\n          detail: {\r\n            name,\r\n            args,\r\n            callback\r\n          }\r\n        });\r\n        window.dispatchEvent(event);\r\n\r\n        setCallFn({ name, args, callback });\r\n      });\r\n\r\n      socket.on('clear_call_fn', () => {\r\n        setCallFn(undefined);\r\n      });\r\n\r\n      socket.on('call_fn_timeout', () => {\r\n        setCallFn(undefined);\r\n      });\r\n\r\n      socket.on('chat_settings', (inputs: any) => {\r\n        setChatSettingsInputs(inputs);\r\n        resetChatSettingsValue();\r\n      });\r\n\r\n      socket.on('element', (element: IElement) => {\r\n        if (!element.url && element.chainlitKey) {\r\n          element.url = client.getElementUrl(element.chainlitKey, sessionId);\r\n        }\r\n\r\n        if (element.type === 'avatar') {\r\n          setAvatars((old) => {\r\n            const index = old.findIndex((e) => e.id === element.id);\r\n            if (index === -1) {\r\n              return [...old, element];\r\n            } else {\r\n              return [...old.slice(0, index), element, ...old.slice(index + 1)];\r\n            }\r\n          });\r\n        } else if (element.type === 'tasklist') {\r\n          setTasklists((old) => {\r\n            const index = old.findIndex((e) => e.id === element.id);\r\n            if (index === -1) {\r\n              return [...old, element];\r\n            } else {\r\n              return [...old.slice(0, index), element, ...old.slice(index + 1)];\r\n            }\r\n          });\r\n        } else {\r\n          setElements((old) => {\r\n            const index = old.findIndex((e) => e.id === element.id);\r\n            if (index === -1) {\r\n              return [...old, element];\r\n            } else {\r\n              return [...old.slice(0, index), element, ...old.slice(index + 1)];\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      socket.on('remove_element', (remove: { id: string }) => {\r\n        setElements((old) => {\r\n          return old.filter((e) => e.id !== remove.id);\r\n        });\r\n        setTasklists((old) => {\r\n          return old.filter((e) => e.id !== remove.id);\r\n        });\r\n        setAvatars((old) => {\r\n          return old.filter((e) => e.id !== remove.id);\r\n        });\r\n      });\r\n\r\n      socket.on('action', (action: IAction) => {\r\n        setActions((old) => [...old, action]);\r\n      });\r\n\r\n      socket.on('remove_action', (action: IAction) => {\r\n        setActions((old) => {\r\n          const index = old.findIndex((a) => a.id === action.id);\r\n          if (index === -1) return old;\r\n          return [...old.slice(0, index), ...old.slice(index + 1)];\r\n        });\r\n      });\r\n\r\n      socket.on('token_usage', (count: number) => {\r\n        setTokenCount((old) => old + count);\r\n      });\r\n    },\r\n    [setSession, sessionId, chatProfile]\r\n  );\r\n\r\n  const connect = useCallback(debounce(_connect, 200), [_connect]);\r\n\r\n  const disconnect = useCallback(() => {\r\n    if (session?.socket) {\r\n      session.socket.removeAllListeners();\r\n      session.socket.close();\r\n    }\r\n  }, [session]);\r\n\r\n  return {\r\n    connect,\r\n    disconnect,\r\n    session,\r\n    chatProfile,\r\n    idToResume,\r\n    setChatProfile\r\n  };\r\n};\r\n\r\nexport { useChatSession };\r\n","const tokenKey = 'token';\r\n\r\nexport function getToken() {\r\n  try {\r\n    return localStorage.getItem(tokenKey);\r\n  } catch (e) {\r\n    return;\r\n  }\r\n}\r\n\r\nexport function setToken(token: string) {\r\n  try {\r\n    return localStorage.setItem(tokenKey, token);\r\n  } catch (e) {\r\n    return;\r\n  }\r\n}\r\n\r\nexport function removeToken() {\r\n  try {\r\n    return localStorage.removeItem(tokenKey);\r\n  } catch (e) {\r\n    return;\r\n  }\r\n}\r\n","import jwt_decode from 'jwt-decode';\r\nimport { useEffect } from 'react';\r\nimport { useRecoilState, useSetRecoilState } from 'recoil';\r\nimport { accessTokenState, threadHistoryState, userState } from 'src/state';\r\nimport { IUser } from 'src/types';\r\nimport { getToken, removeToken, setToken } from 'src/utils/token';\r\n\r\nimport { ChainlitAPI } from '..';\r\nimport { useApi } from './api';\r\n\r\nexport const useAuth = (apiClient: ChainlitAPI) => {\r\n  const { data, isLoading } = useApi<{\r\n    requireLogin: boolean;\r\n    passwordAuth: boolean;\r\n    headerAuth: boolean;\r\n    oauthProviders: string[];\r\n  }>(apiClient, '/auth/config');\r\n  const [accessToken, setAccessToken] = useRecoilState(accessTokenState);\r\n  const setThreadHistory = useSetRecoilState(threadHistoryState);\r\n  const [user, setUser] = useRecoilState(userState);\r\n\r\n  const isReady = !!(!isLoading && data);\r\n\r\n  const logout = async () => {\r\n    await apiClient.logout();\r\n    setUser(null);\r\n    removeToken();\r\n    setAccessToken('');\r\n    setThreadHistory(undefined);\r\n  };\r\n\r\n  const saveAndSetToken = (token: string | null | undefined) => {\r\n    if (!token) {\r\n      logout();\r\n      return;\r\n    }\r\n    try {\r\n      const { exp, ...User } = jwt_decode(token) as any;\r\n      setToken(token);\r\n      setAccessToken(`Bearer ${token}`);\r\n      setUser(User as IUser);\r\n    } catch (e) {\r\n      console.error(\r\n        'Invalid token, clearing token from local storage',\r\n        'error:',\r\n        e\r\n      );\r\n      logout();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user && getToken()) {\r\n      // Initialize the token from local storage\r\n      saveAndSetToken(getToken());\r\n      return;\r\n    }\r\n  }, []);\r\n\r\n  const isAuthenticated = !!accessToken;\r\n\r\n  if (data && !data.requireLogin) {\r\n    return {\r\n      data,\r\n      user: null,\r\n      isReady,\r\n      isAuthenticated: true,\r\n      accessToken: '',\r\n      logout: () => {},\r\n      setAccessToken: () => {}\r\n    };\r\n  }\r\n\r\n  return {\r\n    data,\r\n    user: user,\r\n    isAuthenticated,\r\n    isReady,\r\n    accessToken: accessToken,\r\n    logout: logout,\r\n    setAccessToken: saveAndSetToken\r\n  };\r\n};\r\n","import { useRecoilValue } from 'recoil';\r\nimport { ChainlitAPI } from 'src/api';\r\nimport { accessTokenState } from 'src/state';\r\nimport useSWR, { SWRConfiguration } from 'swr';\r\n\r\nconst fetcher = async (\r\n  client: ChainlitAPI,\r\n  endpoint: string,\r\n  token?: string\r\n) => {\r\n  const res = await client.get(endpoint, token);\r\n\r\n  return res?.json();\r\n};\r\n\r\nfunction useApi<T>(\r\n  client: ChainlitAPI,\r\n  path?: string | null,\r\n  options?: SWRConfiguration\r\n) {\r\n  const accessToken = useRecoilValue(accessTokenState);\r\n\r\n  return useSWR<T, Error>(\r\n    path ? [path, accessToken] : null,\r\n    ([url, token]: [url: string, token: string]) => fetcher(client, url, token),\r\n    options\r\n  );\r\n}\r\n\r\nexport { useApi, fetcher };\r\n","import { IGeneration, IThread } from 'src/types';\r\nimport { removeToken } from 'src/utils/token';\r\n\r\nimport { IFeedback } from 'src/types/feedback';\r\n\r\nexport * from './hooks/auth';\r\nexport * from './hooks/api';\r\n\r\nexport interface IThreadFilters {\r\n  search?: string;\r\n  feedback?: number;\r\n}\r\n\r\nexport interface IPageInfo {\r\n  hasNextPage: boolean;\r\n  endCursor?: string;\r\n}\r\n\r\nexport interface IPagination {\r\n  first: number;\r\n  cursor?: string | number;\r\n}\r\n\r\nexport class ClientError extends Error {\r\n  detail?: string;\r\n\r\n  constructor(message: string, detail?: string) {\r\n    super(message);\r\n    this.detail = detail;\r\n  }\r\n\r\n  toString() {\r\n    if (this.detail) {\r\n      return `${this.message}: ${this.detail}`;\r\n    } else {\r\n      return this.message;\r\n    }\r\n  }\r\n}\r\n\r\ntype Payload = FormData | any;\r\n\r\nexport class APIBase {\r\n  constructor(\r\n    public httpEndpoint: string,\r\n    public type: 'app' | 'copilot' | 'teams' | 'slack',\r\n    public on401?: () => void,\r\n    public onError?: (error: ClientError) => void\r\n  ) {}\r\n\r\n  buildEndpoint(path: string) {\r\n    if (this.httpEndpoint.endsWith('/')) {\r\n      // remove trailing slash on httpEndpoint\r\n      return `${this.httpEndpoint.slice(0, -1)}${path}`;\r\n    } else {\r\n      return `${this.httpEndpoint}${path}`;\r\n    }\r\n  }\r\n\r\n  checkToken(token: string) {\r\n    const prefix = 'Bearer ';\r\n    if (token.startsWith(prefix)) {\r\n      return token;\r\n    } else {\r\n      return prefix + token;\r\n    }\r\n  }\r\n\r\n  async fetch(\r\n    method: string,\r\n    path: string,\r\n    token?: string,\r\n    data?: Payload,\r\n    signal?: AbortSignal\r\n  ): Promise<Response> {\r\n    try {\r\n      const headers: { Authorization?: string; 'Content-Type'?: string } = {};\r\n      if (token) headers['Authorization'] = this.checkToken(token); // Assuming token is a bearer token\r\n\r\n      let body;\r\n\r\n      if (data instanceof FormData) {\r\n        body = data;\r\n      } else {\r\n        headers['Content-Type'] = 'application/json';\r\n        body = data ? JSON.stringify(data) : null;\r\n      }\r\n\r\n      const res = await fetch(this.buildEndpoint(path), {\r\n        method,\r\n        headers,\r\n        signal,\r\n        body\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const body = await res.json();\r\n        if (res.status === 401 && this.on401) {\r\n          removeToken();\r\n          this.on401();\r\n        }\r\n        throw new ClientError(res.statusText, body.detail);\r\n      }\r\n\r\n      return res;\r\n    } catch (error: any) {\r\n      if (error instanceof ClientError && this.onError) {\r\n        this.onError(error);\r\n      }\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async get(endpoint: string, token?: string) {\r\n    return await this.fetch('GET', endpoint, token);\r\n  }\r\n\r\n  async post(\r\n    endpoint: string,\r\n    data: Payload,\r\n    token?: string,\r\n    signal?: AbortSignal\r\n  ) {\r\n    return await this.fetch('POST', endpoint, token, data, signal);\r\n  }\r\n\r\n  async put(endpoint: string, data: Payload, token?: string) {\r\n    return await this.fetch('PUT', endpoint, token, data);\r\n  }\r\n\r\n  async patch(endpoint: string, data: Payload, token?: string) {\r\n    return await this.fetch('PATCH', endpoint, token, data);\r\n  }\r\n\r\n  async delete(endpoint: string, data: Payload, token?: string) {\r\n    return await this.fetch('DELETE', endpoint, token, data);\r\n  }\r\n}\r\n\r\nexport class ChainlitAPI extends APIBase {\r\n  async headerAuth() {\r\n    const res = await this.post(`/auth/header`, {});\r\n    return res.json();\r\n  }\r\n\r\n  async passwordAuth(data: FormData) {\r\n    const res = await this.post(`/login`, data);\r\n    return res.json();\r\n  }\r\n\r\n  async logout() {\r\n    const res = await this.post(`/logout`, {});\r\n    return res.json();\r\n  }\r\n\r\n  async getGeneration(\r\n    generation: IGeneration,\r\n    userEnv = {},\r\n    controller: AbortController,\r\n    accessToken?: string,\r\n    tokenCb?: (done: boolean, token: string) => void\r\n  ) {\r\n    const payload = { userEnv };\r\n    if (generation.type === 'CHAT') {\r\n      payload['chatGeneration'] = generation;\r\n    } else {\r\n      payload['completionGeneration'] = generation;\r\n    }\r\n    const response = await this.post(\r\n      `/generation`,\r\n      payload,\r\n      accessToken,\r\n      controller.signal\r\n    );\r\n\r\n    const reader = response?.body?.getReader();\r\n\r\n    const stream = new ReadableStream({\r\n      start(controller) {\r\n        function push() {\r\n          reader!\r\n            .read()\r\n            .then(({ done, value }) => {\r\n              if (done) {\r\n                controller.close();\r\n                tokenCb && tokenCb(done, '');\r\n                return;\r\n              }\r\n              const string = new TextDecoder('utf-8').decode(value);\r\n              tokenCb && tokenCb(done, string);\r\n              controller.enqueue(value);\r\n              push();\r\n            })\r\n            .catch((err) => {\r\n              controller.close();\r\n              tokenCb && tokenCb(true, '');\r\n              console.error(err);\r\n            });\r\n        }\r\n        push();\r\n      }\r\n    });\r\n\r\n    return stream;\r\n  }\r\n\r\n  async setFeedback(\r\n    feedback: IFeedback,\r\n    accessToken?: string\r\n  ): Promise<{ success: boolean; feedbackId: string }> {\r\n    const res = await this.put(`/feedback`, { feedback }, accessToken);\r\n    return res.json();\r\n  }\r\n\r\n  async listThreads(\r\n    pagination: IPagination,\r\n    filter: IThreadFilters,\r\n    accessToken?: string\r\n  ): Promise<{\r\n    pageInfo: IPageInfo;\r\n    data: IThread[];\r\n  }> {\r\n    const res = await this.post(\r\n      `/project/threads`,\r\n      { pagination, filter },\r\n      accessToken\r\n    );\r\n\r\n    return res.json();\r\n  }\r\n\r\n  async deleteThread(threadId: string, accessToken?: string) {\r\n    const res = await this.delete(`/project/thread`, { threadId }, accessToken);\r\n\r\n    return res.json();\r\n  }\r\n\r\n  uploadFile(\r\n    file: File,\r\n    onProgress: (progress: number) => void,\r\n    sessionId: string,\r\n    token?: string\r\n  ) {\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    const promise = new Promise<{ id: string }>((resolve, reject) => {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      xhr.open(\r\n        'POST',\r\n        this.buildEndpoint(`/project/file?session_id=${sessionId}`),\r\n        true\r\n      );\r\n\r\n      if (token) {\r\n        xhr.setRequestHeader('Authorization', this.checkToken(token));\r\n      }\r\n\r\n      // Track the progress of the upload\r\n      xhr.upload.onprogress = function (event) {\r\n        if (event.lengthComputable) {\r\n          const percentage = (event.loaded / event.total) * 100;\r\n          onProgress(percentage);\r\n        }\r\n      };\r\n\r\n      xhr.onload = function () {\r\n        if (xhr.status === 200) {\r\n          const response = JSON.parse(xhr.responseText);\r\n          resolve(response);\r\n        } else {\r\n          reject('Upload failed');\r\n        }\r\n      };\r\n\r\n      xhr.onerror = function () {\r\n        reject('Upload error');\r\n      };\r\n\r\n      xhr.send(formData);\r\n    });\r\n\r\n    return { xhr, promise };\r\n  }\r\n\r\n  getElementUrl(id: string, sessionId: string) {\r\n    const queryParams = `?session_id=${sessionId}`;\r\n    return this.buildEndpoint(`/project/file/${id}${queryParams}`);\r\n  }\r\n\r\n  getLogoEndpoint(theme: string) {\r\n    return this.buildEndpoint(`/logo?theme=${theme}`);\r\n  }\r\n\r\n  getOAuthEndpoint(provider: string) {\r\n    return this.buildEndpoint(`/auth/oauth/${provider}`);\r\n  }\r\n}\r\n","export * from './useChatData';\r\nexport * from './useChatInteract';\r\nexport * from './useChatMessages';\r\nexport * from './useChatSession';\r\nexport * from './api';\r\nexport * from './types';\r\nexport * from './state';\r\nexport * from './utils/message';\r\n\r\nexport { Socket } from 'socket.io-client';\r\n"]}